<div class="homepage-layout">
  <!-- 现有内容 -->
  <div class="search-bar">...</div>
  <div class="latest-articles">...</div>
  
  <!-- 新增热点讨论板块 -->
  <div class="hot-topics">
    <h2>热点讨论</h2>
    <div class="topic-card">
      <h3>{{热点话题标题}}</h3>
      <p>{{简短描述}}</p>
      <div class="topic-stats">
        <span>{{评论数}} 评论</span>
        <span>{{点赞数}} 点赞</span>
      </div>
      <button class="join-discussion-btn">参与讨论</button>
    </div>
  </div>
  
  <!-- 其他内容 -->
  <div class="popular-tags">...</div>
</div>
   const express = require('express');
   const mongoose = require('mongoose');
   const elasticsearch = require('elasticsearch');

   const app = express();

   // 连接数据库
   mongoose.connect('mongodb://localhost/sports_science_db');

   // 设置 Elasticsearch 客户端
   const esClient = new elasticsearch.Client({
     host: 'localhost:9200'
   });

   // 定义路由
   app.get('/api/articles', async (req, res) => {
     // 实现文章列表API
   });

   app.get('/api/hot-topics', async (req, res) => {
     // 实现热点话题API
   });

   // 启动服务器
   app.listen(3000, () => console.log('Server running on port 3000'));
   import React from 'react';
   import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
   import HomePage from './components/HomePage';
   import SearchResults from './components/SearchResults';
   import ArticleDetail from './components/ArticleDetail';

   function App() {
     return (
       <Router>
         <Switch>
           <Route exact path="/" component={HomePage} />
           <Route path="/search" component={SearchResults} />
           <Route path="/article/:id" component={ArticleDetail} />
         </Switch>
       </Router>
     );
   }

   export default App;
   import React, { useState, useEffect } from 'react';
   import axios from 'axios';

   function HotTopics() {
     const [topic, setTopic] = useState(null);

     useEffect(() => {
       axios.get('/api/hot-topics')
         .then(response => setTopic(response.data))
         .catch(error => console.error('Error fetching hot topic:', error));
     }, []);

     if (!topic) return <div>加载中...</div>;

     return (
       <div className="hot-topics">
         <h2>热点讨论</h2>
         <div className="topic-card">
           <h3>{topic.title}</h3>
           <p>{topic.description}</p>
           <div className="topic-stats">
             <span>{topic.commentCount} 评论</span>
             <span>{topic.likeCount} 点赞</span>
           </div>
           <button className="join-discussion-btn">参与讨论</button>
         </div>
       </div>
     );
   }

   export default HotTopics;
   // ... 现有代码 ...

   // 管理员认证中间件
   const adminAuth = (req, res, next) => {
     // 实现管理员认证逻辑
   };

   // 管理员 API 路由
   app.get('/api/admin/dashboard', adminAuth, async (req, res) => {
     // 实现仪表盘数据获取逻辑
   });

   app.get('/api/admin/articles', adminAuth, async (req, res) => {
     // 实现文章列表获取逻辑
   });

   app.post('/api/admin/articles', adminAuth, async (req, res) => {
     // 实现新增文章逻辑
   });

   // 其他管理 API ...

   // ... 现有代码 ...
   import React from 'react';
   import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';
   import Dashboard from './components/Dashboard';
   import ArticleManagement from './components/ArticleManagement';
   import UserManagement from './components/UserManagement';
   import CommentManagement from './components/CommentManagement';
   import Settings from './components/Settings';

   function AdminApp() {
     return (
       <Router>
         <div className="admin-layout">
           <Sidebar />
           <div className="admin-content">
             <Switch>
               <Route exact path="/admin" component={Dashboard} />
               <Route path="/admin/articles" component={ArticleManagement} />
               <Route path="/admin/users" component={UserManagement} />
               <Route path="/admin/comments" component={CommentManagement} />
               <Route path="/admin/settings" component={Settings} />
             </Switch>
           </div>
         </div>
       </Router>
     );
   }

   export default AdminApp;
   import React, { useState, useEffect } from 'react';
   import axios from 'axios';

   function Dashboard() {
     const [stats, setStats] = useState(null);

     useEffect(() => {
       axios.get('/api/admin/dashboard')
         .then(response => setStats(response.data))
         .catch(error => console.error('Error fetching dashboard data:', error));
     }, []);

     if (!stats) return <div>加载中...</div>;

     return (
       <div className="dashboard">
         <h1>网站概况</h1>
         <div className="stats-grid">
           <div className="stat-card">
             <h3>用户总数</h3>
             <p>{stats.totalUsers}</p>
           </div>
           <div className="stat-card">
             <h3>文章总数</h3>
             <p>{stats.totalArticles}</p>
           </div>
           <div className="stat-card">
             <h3>今日访问量</h3>
             <p>{stats.dailyVisits}</p>
           </div>
           {/* 其他统计数据 */}
         </div>
       </div>
     );
   }

   export default Dashboard;
